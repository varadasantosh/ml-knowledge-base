{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww68600\viewh27180\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
1. Create EC2 Instance of type g4dn.xlarge or g4dn*12\
2. Druing Instance Creation, Create Keypair, we will get Public Key\
3. Edit default secrutiy rule group to allow TCP on PORT 22 - this is required to connect to EC2 instance \
    using SSH\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
1. Connect to EC2 Instance using public key and  Public IPV4 DNS \
    \
    EX:- 
\f1\fs22 \cf2 \CocoaLigature0 ssh -i "pytorch-dpp.pem" ec2-user@ec2-35-166-194-189.us-west-2.compute.amazonaws.com\
\
      public key:-  pytorch-dpp.pem \
      public IPV4 DNS:- ec2-user@ec2-35-166-194-189.us-west-2.compute.amazonaws.com\
\
2. aws configure using ACCESSKEY & SECRETACCESSKEY of the user from IAM, we created user \'93pytorch-ddp\'94 and region:- us-west-2\
\
	ACCESSKEY:- AKIA5KBKDIK6KBZC6OMB\
	SECRETACCESSKEY:- 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\
\
3. Install docker cli & daemon \
\
    sudo dnf update\
    sudo dnf install docker\
    sudo systemctl start docker\
    sudo systemctl enable docker\
\
4. Login to docker ECR using below command\
\
   aws ecr get-login-password --region us-west-2 docker login --username AWS --password-stdin 763104351884.dkr.ecr.us-west-2.amazonaws.com \
\
\
   Install Dokcer for Ubuntu Linux:- https://docs.docker.com/engine/install/ubuntu/\
\
images:- sudo docker run --rm --gpus all -it   pytorch/pytorch:2.2.0-cuda12.1-cudnn8-runtime bash\
	   docker run --gpus all nvidia/cuda:12.2.2-devel-ubuntu22.04 nvidia-smi\
\
\
Steps Followed:- https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg   && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list |     sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' |     sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\
\
sudo sed -i -e '/experimental/ s/^#//g' /etc/apt/sources.list.d/nvidia-container-toolkit.list\
\
sudo apt-get update	\
\
sudo apt-get install -y nvidia-container-toolkit\
\
sudo nvidia-ctk runtime configure --runtime=docker\
\
sudo systemctl restart docker\
\
sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place\
\
sudo apt install -y nvidia-driver-535 - This step is important to install the nvidia drivers, this is not present in NVIDIA documentation\
\
modify no-cgroups=false by editing the file - sudo nano /etc/nvidia-container-runtime/config.toml\
\
sudo systemctl restart docker\
\
sudo docker run --rm --gpus all -it   pytorch/pytorch:2.2.0-cuda12.1-cudnn8-runtime bash\
	\
	python\
		import torch\
		torch.cuda.is_availble()\
\
\
\
pytorch-dpp	vpc-0160ad53630d09c45		172.31.10.143\
pytorch-2	vpc-0160ad53630d09c45		172.31.1.70\
pytorch-3	vpc-0160ad53630d09c45		172.31.9.130\
pytorch-4	vpc-0160ad53630d09c45		172.31.4.152\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\
\
\
}